name: Publish package to GitHub Packages
on:
  push:
    branches:
      - develop
  pull_request:

permissions: write-all

jobs:
  getChangedPackages:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    outputs:
      changedPackages: ${{ steps.filter.outputs.changes }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            a1-box-api:
              - packages/a1-box-api/**            
            a1-dynamo-client:
              - packages/a1-dynamo-client/**            
            a1-eventbus:
              - packages/a1-eventbus/**            
            a1-eventbus-generator:
              - packages/a1-eventbus-generator/**           
            a1-first-integrity-api:
              - packages/a1-first-integrity-api/**           
            a1-fotonotes-api:
              - packages/a1-fotonotes-api/**          
            a1-logger-v2:
              - packages/a1-logger-v2/**          
            a1-maestro-api:
              - packages/a1-maestro-api/**          
            a1-monday-api:
              - packages/a1-monday-api/**          
            a1-object-mapper:
              - packages/a1-object-mapper/**          
            a1-qualia-api:
              - packages/a1-qualia-api/**         
            a1-spruce-api:
              - packages/a1-spruce-api/**         
            a1-unqork-api:
              - packages/a1-unqork-api/**         
            a1-utils:
              - packages/a1-utils/**

  tests:
    name: Changed package CI
    runs-on: ubuntu-latest
    needs: getChangedPackages
    permissions: write-all

    if: ${{ needs.getChangedPackages.outputs.changedPackages != '[]' && needs.getChangedPackages.outputs.changedPackages != '' }}
    strategy:
      matrix:
        packageName: ${{ fromJSON(needs.getChangedPackages.outputs.changedPackages) }}
        node: [16]
    steps:
      - name: Checkout repository ${{ matrix.packageName }}
        uses: actions/checkout@v3
           # Setup .npmrc file to publish to npm
      - name: Setup .npmrc
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Get info from package.json
        uses: myrotvorets/info-from-package-json-action@1.0.0
        id: packageInfo
        with:
          workingdir: ./packages/${{ matrix.packageName }}

      - name: Deploy changed package
        if: github.event_name == 'push'
        run: npm publish
        working-directory: ./packages/${{ matrix.packageName }}
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      
      - name: Comment about published package
        if: github.event_name == 'push'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pullRequests = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: `${context.repo.owner}:${context.ref.replace('refs/heads/', '')}`
            });

            github.rest.issues.createComment({
              issue_number: context?.issue?.number || pullRequests?.data[0]?.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '${{ steps.packageInfo.outputs.packageName }} v.${{steps.packageInfo.outputs.packageVersion}} was published successfully.\nhttps://github.com/Valentinishe/test-act/pkgs/npm/${{ matrix.packageName }}'
            });

      - uses: "marvinpinto/action-automatic-releases@latest"
        if: github.event_name == 'push'
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{steps.packageInfo.outputs.packageVersion}}
          prerelease: false
          title: ${{ steps.packageInfo.outputs.packageName }}
          files: |
            LICENSE.txt
            *.jar

