name: Continuous Integration

on: pull_request
permissions: write-all

jobs:
  getChangedPackages:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    outputs:
      changedPackages: ${{ steps.filter.outputs.changes }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            a1-box-api:
              - packages/a1-box-api/**            
            a1-dynamo-client:
              - packages/a1-dynamo-client/**            
            a1-eventbus:
              - packages/a1-eventbus/**            
            a1-eventbus-generator:
              - packages/a1-eventbus-generator/**           
            a1-first-integrity-api:
              - packages/a1-first-integrity-api/**           
            a1-fotonotes-api:
              - packages/a1-fotonotes-api/**          
            a1-logger-v2:
              - packages/a1-logger-v2/**          
            a1-maestro-api:
              - packages/a1-maestro-api/**          
            a1-monday-api:
              - packages/a1-monday-api/**          
            a1-object-mapper:
              - packages/a1-object-mapper/**          
            a1-qualia-api:
              - packages/a1-qualia-api/**         
            a1-spruce-api:
              - packages/a1-spruce-api/**         
            a1-unqork-api:
              - packages/a1-unqork-api/**         
            a1-utils:
              - packages/a1-utils/**
  

  install-and-test:
    runs-on: ubuntu-latest
    needs: getChangedPackages

    if: ${{ needs.getChangedPackages.outputs.changedPackages != '[]' && needs.getChangedPackages.outputs.changedPackages != '' }}
    strategy:
      fail-fast: true
      matrix:
        packageName: ${{ fromJSON(needs.getChangedPackages.outputs.changedPackages) }}
        node-version: [16]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install project dependencies
        working-directory: ./packages/${{ matrix.packageName }}
        run: npm install
        env:
          NPM_AUTH_TOKEN: ${{ secrets.EVENTBUS_DEVOPS_PAT }}

      - name: Test and Generate Coverage
        working-directory: ./packages/${{ matrix.packageName }}
        run: npm run test

      - name: Print the Total Coverage
        id: coverage-percent
        working-directory: ./packages/${{ matrix.packageName }}
        shell: bash
        run: |
          value=`sed -n 26p test/reports/lcov-report/index.html | awk -F '>' '{print $2}' | awk -F '%' '{print $1}'`
          echo "coverage<<EOF" >> $GITHUB_OUTPUT
          echo "$value" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      # https://github.com/actions/github-script#apply-a-label-to-an-issue
      - name: Add Coverage Comment
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '${{ matrix.packageName }} coverage: ${{steps.coverage-percent.outputs.coverage}}%'
            })
